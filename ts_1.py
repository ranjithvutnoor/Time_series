# -*- coding: utf-8 -*-
"""TS_1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14TgkQlCo-JF5KzAUur2KlkeXBUZfzWal
"""

pip install download

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from download import download

path = download("https://archive.ics.uci.edu/ml/machine-learning-databases/00501/PRSA2017_Data_20130301-20170228.zip",r'C:\Users\ranji\Dropbox\PC\Desktop\dataset\aq')

df = pd.read_csv('/content/tmp/aq/PRSA_Data_20130301-20170228/PRSA_Data_Dingling_20130301-20170228.csv')

df.head()

df.describe()

df.isnull

df.shape

df.sum

df_NI = df.copy()

import datetime
import convertdate

def convert_to_date(x):
  return datetime.datetime.strptime(x,'%Y %m %d %H')

df = pd.read_csv('/content/tmp/aq/PRSA_Data_20130301-20170228/PRSA_Data_Dingling_20130301-20170228.csv',parse_dates=[['year','month','day','hour']], date_parser=convert_to_date, keep_date_col=True)

df.head()

df.info()

df['month'] = pd.to_numeric(df['month'])

df_NI =df.copy()

df['month']

print('rows:',df.shape[0])
print('columns:',df.shape[1])
print('\nFeatures:\n',df.columns.tolist())
print('\nMissing values:',df.isnull().any())
print('\nUnique values:\n',df.nunique())

df = df.set_index('year_month_day_hour')

df.describe()



df.loc['2013-03-01':'2013-03-05']

df.loc['2013':'2015']

pm_data = df['PM2.5']

pm_data.head()

pm_data.plot(grid = True)

df_2014 = df.loc['2014']
pm_data_2014 = df_2014['PM2.5']
pm_data_2014.plot(grid = True)

df_2015=df.loc['2014']
pm_data_2015=df_2015[['PM2.5','TEMP','PRES']]
pm_data_2015.plot(subplots=True)

df_2015 = df.loc['2015']
pm_data_2015 = df_2015['PM2.5']
pm_data_2015.plot(grid = True)

df.head()

df_NI.head()

import plotly.express as px
fig = px.line(df_NI, x ='year_month_day_hour', y = 'PM2.5', title = 'PM.2.5 with slider')
fig.update_layout(xaxis=dict(rangeslider=dict(visible=True),type = 'date'))
fig.show()

fig =px.line(df_NI,x='year_month_day_hour',y='PM2.5',title='PM2.5 with slider')
fig.update_xaxes( rangeslider_visible = True,
                 rangeselector=dict(
                   buttons = list([
                       dict(count=1,label='1y',step='year',stepmode='backward'),
                       dict(count=2,label='2y',step='year',stepmode='backward'),
                       dict(count=3,label='3y',step='year',stepmode='backward')         
                                   


                   ])
                 ) 
    
)
fig.show()

df['year'] = pd.to_numeric(df['year'])

df['year']

df_2014=df['2014'].reset_index()
df_2015 = df['2015'].reset_index()
df_2014['month_day_hour'] =df_2014.apply(lambda x : str(x['month'])+'-'+x['day'],axis=1)
df_2015['month_day_hour'] = df_2015.apply(lambda x: str(x['month'])+'-'+x['day'],axis=1)
plt.plot(df_2014['month_day_hour'],df_2014['PM2.5'])
plt.plot(df_2015['month_day_hour'],df_2015['PM2.5'])
plt.legend(['2014','2015'])
plt.xlabel('month')
plt.ylabel('PM2.5')
plt.title('air quality for the year 2013 and 2012')

df_2015=df['2015']
pm_data_2015=df_2015[['PM2.5','TEMP','PRES']]
pm_data_2015.plot(subplots=True)

multi_data= df[['SO2','NO2','CO','O3','PM2.5']]
multi_data.plot(subplots=True)

g = sns.pairplot(df[['SO2','NO2','CO','O3','PM2.5']])

corr_df = df[['SO2','NO2','CO','O3','PM2.5']].corr(method='pearson')
corr_df

g=sns.heatmap(corr_df,vmax=6,center = 0,
            square =True,linewidths=.5,cbar_kws={'shrink':.5},annot=True,fmt='.2f',cmap= 'mako')
g.figure.set_size_inches(10,10)
plt.show()



df.groupby('month').agg({'PM2.5':['max'],'TEMP':['min','max']}).reset_index()

df_na=df.copy()
df_na=df_na.dropna()

pd.plotting.autocorrelation_plot(df_na['2014':'2016']['PM2.5'])

df_na['TEMP'].resample('1m').mean()