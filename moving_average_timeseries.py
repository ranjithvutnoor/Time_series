# -*- coding: utf-8 -*-
"""moving average_timeseries

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Enq1R1AugxZWbimajKkPSisisvlfttK3
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import os 
from datetime import datetime

def date(x):
  return datetime.strptime(x,'%d/%m/%Y')

df = pd.read_csv('https://github.com/srivatsan88/YouTubeLI/raw/7fa3a9c98f1f8879761c758e865d74af87336ddf/dataset/electricity_consumption.csv', parse_dates=['Bill_Date'], date_parser=date)

df.head()

print('rows  : ',df.shape[0])
print('columns : ' ,df.shape[1])
print('\n Features : \n',df.columns.tolist())
print('\n missing_values : \n',df.isnull().any())
print('\n nunique  : \n', df.nunique())

df = df.set_index('Bill_Date')

bill_2018 = df['2016':'2018'][['Billed_amount']]

bill_2018['Billed_amount'].rolling(window=4).mean()

"""## **sma = (t+(t-1)+(t-2)......(t_n))/n**"""

bill_2018['ma_rolling4']  =bill_2018['Billed_amount'].rolling(window=4).mean().shift(1)# sudden search cannot be deteected not used for fluctuaions

bill_2018

plt.rcParams['figure.figsize'] = (10,8)
plt.rcParams['axes.grid'] = False

bill_2018.plot()

"""#weighted moving average  = (t*w1+((t-1)*(w-1))+....+(t-n)*(w-n))/n)"""

def wma(weights):
  def calc(x):
    return (weights*x).mean()
  return calc

bill_2018['Billed_amount'].rolling(window=4).apply(wma(np.array([0.5,1,1.5,2])))

bill_2018['wma_rolling5'] = bill_2018['Billed_amount'].rolling(window=5).apply(wma(np.array([0.5,1,1.5,2,2.5]))).shift(1)

bill_2018

bill_2018.plot()

"""#exponential moving average"""

bill_2018['Billed_amount'].ewm(span = 4,adjust = False, min_periods = 0).mean()

bill_2018['ewa_2018'] = bill_2018['Billed_amount'].ewm(span =4 ,adjust = False, min_periods=0).mean().shift(1)

bill_2018

bill_2018.plot()

"""#exponential smoothing"""

bill_2018['Billed_amount'].ewm(alpha = 0.7,adjust=False,min_periods =3).mean().shift(1)

bill_2018['esa_3_0.7']=bill_2018['Billed_amount'].ewm(alpha = 0.7,adjust=False,min_periods =3).mean().shift(1)

bill_2018

bill_2018.plot()

bill_2018['esa_3_0.3']=bill_2018['Billed_amount'].ewm(alpha = 0.3,adjust=False,min_periods =3).mean().shift(1)

bill_2018.plot()

bill_2018[['esa_3_0.3','esa_3_0.7']].plot()

"""#rmse sqrt((y-ybar)**2/n)"""

((bill_2018['Billed_amount']-bill_2018['ma_rolling4'])**2).mean()**0.5

((bill_2018['Billed_amount']-bill_2018['wma_rolling3'])**2).mean()**0.5

((bill_2018['Billed_amount']-bill_2018['wma_rolling4'])**2).mean()**0.5

((bill_2018['Billed_amount']-bill_2018['wma_rolling5'])**2).mean()**0.5

((bill_2018['Billed_amount']-bill_2018['esa_2018'])**2).mean()**0.5

((bill_2018['Billed_amount']-bill_2018['ema_2018'])**2).mean()**0.5

((bill_2018['Billed_amount']-bill_2018['esa_3'])**2).mean()**0.5

((bill_2018['Billed_amount']-bill_2018['ewa_2018'])**2).mean()**0.5

((bill_2018['Billed_amount']-bill_2018['esa_3_0.3'])**2).mean()**0.5

((bill_2018['Billed_amount']-bill_2018['esa_3_0.7'])**2).mean()**0.5

"""error is less for alpha = 0.7 than alpha = 0.3"""